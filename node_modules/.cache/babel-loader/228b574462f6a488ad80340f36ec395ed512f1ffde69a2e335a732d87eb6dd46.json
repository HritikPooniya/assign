{"ast":null,"code":"import axios from'axios';const api=axios.create({baseURL:'https://api.freeapi.app/api/v1'});api.interceptors.request.use(config=>{const accessToken=localStorage.getItem('accessToken');if(accessToken){config.headers['Authorization']=`Bearer ${accessToken}`;}return config;},error=>Promise.reject(error));api.interceptors.response.use(response=>response,async error=>{const originalRequest=error.config;if(error.response.status===401&&!originalRequest._retry){originalRequest._retry=true;const refreshToken=localStorage.getItem('refreshToken');try{const response=await api.post('/users/refresh-token',{token:refreshToken});const{accessToken}=response.data;localStorage.setItem('accessToken',accessToken);api.defaults.headers['Authorization']=`Bearer ${accessToken}`;return api(originalRequest);}catch(err){console.error('Refresh token failed:',err);}}return Promise.reject(error);});export default api;","map":{"version":3,"names":["axios","api","create","baseURL","interceptors","request","use","config","accessToken","localStorage","getItem","headers","error","Promise","reject","response","originalRequest","status","_retry","refreshToken","post","token","data","setItem","defaults","err","console"],"sources":["C:/Users/AIPL/Desktop/New folder/assign/src/Api.js"],"sourcesContent":["\r\nimport axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'https://api.freeapi.app/api/v1',\r\n});\r\n\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const accessToken = localStorage.getItem('accessToken');\r\n    if (accessToken) {\r\n      config.headers['Authorization'] = `Bearer ${accessToken}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n    if (error.response.status === 401 && !originalRequest._retry) {\r\n      originalRequest._retry = true;\r\n\r\n      const refreshToken = localStorage.getItem('refreshToken');\r\n      try {\r\n        const response = await api.post('/users/refresh-token', { token: refreshToken });\r\n        const { accessToken } = response.data;\r\n\r\n        localStorage.setItem('accessToken', accessToken);\r\n        api.defaults.headers['Authorization'] = `Bearer ${accessToken}`;\r\n\r\n        return api(originalRequest);\r\n      } catch (err) {\r\n         \r\n        console.error('Refresh token failed:', err);\r\n     \r\n      }\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;\r\n"],"mappings":"AACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,GAAG,CAAGD,KAAK,CAACE,MAAM,CAAC,CACvBC,OAAO,CAAE,gCACX,CAAC,CAAC,CAEFF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,EAAK,CACV,KAAM,CAAAC,WAAW,CAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CACvD,GAAIF,WAAW,CAAE,CACfD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,CAAG,UAAUH,WAAW,EAAE,CAC3D,CACA,MAAO,CAAAD,MAAM,CACf,CAAC,CACAK,KAAK,EAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC,CAEDX,GAAG,CAACG,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,EAAKA,QAAQ,CACtB,KAAO,CAAAH,KAAK,EAAK,CACf,KAAM,CAAAI,eAAe,CAAGJ,KAAK,CAACL,MAAM,CACpC,GAAIK,KAAK,CAACG,QAAQ,CAACE,MAAM,GAAK,GAAG,EAAI,CAACD,eAAe,CAACE,MAAM,CAAE,CAC5DF,eAAe,CAACE,MAAM,CAAG,IAAI,CAE7B,KAAM,CAAAC,YAAY,CAAGV,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CACzD,GAAI,CACF,KAAM,CAAAK,QAAQ,CAAG,KAAM,CAAAd,GAAG,CAACmB,IAAI,CAAC,sBAAsB,CAAE,CAAEC,KAAK,CAAEF,YAAa,CAAC,CAAC,CAChF,KAAM,CAAEX,WAAY,CAAC,CAAGO,QAAQ,CAACO,IAAI,CAErCb,YAAY,CAACc,OAAO,CAAC,aAAa,CAAEf,WAAW,CAAC,CAChDP,GAAG,CAACuB,QAAQ,CAACb,OAAO,CAAC,eAAe,CAAC,CAAG,UAAUH,WAAW,EAAE,CAE/D,MAAO,CAAAP,GAAG,CAACe,eAAe,CAAC,CAC7B,CAAE,MAAOS,GAAG,CAAE,CAEZC,OAAO,CAACd,KAAK,CAAC,uBAAuB,CAAEa,GAAG,CAAC,CAE7C,CACF,CACA,MAAO,CAAAZ,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED,cAAe,CAAAX,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}