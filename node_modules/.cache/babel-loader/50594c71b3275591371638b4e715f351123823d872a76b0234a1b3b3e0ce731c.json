{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'https://api.freeapi.app/api/v1'\n});\napi.interceptors.request.use(config => {\n  const accessToken = localStorage.getItem('accessToken');\n  if (accessToken) {\n    config.headers['Authorization'] = `Bearer ${accessToken}`;\n  }\n  return config;\n}, error => Promise.reject(error));\napi.interceptors.response.use(response => response, async error => {\n  const originalRequest = error.config;\n  if (error.response.status === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    const refreshToken = localStorage.getItem('refreshToken');\n    try {\n      const response = await api.post('/users/refresh-token', {\n        token: refreshToken\n      });\n      const {\n        accessToken\n      } = response.data;\n      localStorage.setItem('accessToken', accessToken);\n      api.defaults.headers['Authorization'] = `Bearer ${accessToken}`;\n      return api(originalRequest);\n    } catch (err) {\n      // Handle refresh token failure (e.g., log out user)\n      console.error('Refresh token failed:', err);\n      // You might want to redirect to login here\n    }\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","interceptors","request","use","config","accessToken","localStorage","getItem","headers","error","Promise","reject","response","originalRequest","status","_retry","refreshToken","post","token","data","setItem","defaults","err","console"],"sources":["C:/Users/AIPL/Desktop/New folder/assign/src/Api.js"],"sourcesContent":["\r\nimport axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'https://api.freeapi.app/api/v1',\r\n});\r\n\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const accessToken = localStorage.getItem('accessToken');\r\n    if (accessToken) {\r\n      config.headers['Authorization'] = `Bearer ${accessToken}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n    if (error.response.status === 401 && !originalRequest._retry) {\r\n      originalRequest._retry = true;\r\n\r\n      const refreshToken = localStorage.getItem('refreshToken');\r\n      try {\r\n        const response = await api.post('/users/refresh-token', { token: refreshToken });\r\n        const { accessToken } = response.data;\r\n\r\n        localStorage.setItem('accessToken', accessToken);\r\n        api.defaults.headers['Authorization'] = `Bearer ${accessToken}`;\r\n\r\n        return api(originalRequest);\r\n      } catch (err) {\r\n        // Handle refresh token failure (e.g., log out user)\r\n        console.error('Refresh token failed:', err);\r\n        // You might want to redirect to login here\r\n      }\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;\r\n"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE;AACX,CAAC,CAAC;AAEFF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EACvD,IAAIF,WAAW,EAAE;IACfD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUH,WAAW,EAAE;EAC3D;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;AAEDX,GAAG,CAACG,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAKA,QAAQ,EACtB,MAAOH,KAAK,IAAK;EACf,MAAMI,eAAe,GAAGJ,KAAK,CAACL,MAAM;EACpC,IAAIK,KAAK,CAACG,QAAQ,CAACE,MAAM,KAAK,GAAG,IAAI,CAACD,eAAe,CAACE,MAAM,EAAE;IAC5DF,eAAe,CAACE,MAAM,GAAG,IAAI;IAE7B,MAAMC,YAAY,GAAGV,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IACzD,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMd,GAAG,CAACmB,IAAI,CAAC,sBAAsB,EAAE;QAAEC,KAAK,EAAEF;MAAa,CAAC,CAAC;MAChF,MAAM;QAAEX;MAAY,CAAC,GAAGO,QAAQ,CAACO,IAAI;MAErCb,YAAY,CAACc,OAAO,CAAC,aAAa,EAAEf,WAAW,CAAC;MAChDP,GAAG,CAACuB,QAAQ,CAACb,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUH,WAAW,EAAE;MAE/D,OAAOP,GAAG,CAACe,eAAe,CAAC;IAC7B,CAAC,CAAC,OAAOS,GAAG,EAAE;MACZ;MACAC,OAAO,CAACd,KAAK,CAAC,uBAAuB,EAAEa,GAAG,CAAC;MAC3C;IACF;EACF;EACA,OAAOZ,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeX,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}