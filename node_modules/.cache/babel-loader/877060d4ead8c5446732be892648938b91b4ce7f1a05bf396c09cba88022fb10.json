{"ast":null,"code":"import React,{useState}from\"react\";import\"../styles/register.css\";import{useNavigate}from\"react-router-dom\";import api from\"../Api\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Register=()=>{const navigate=useNavigate();const[data,setData]=useState({username:\"\",email:\"\",password:\"\"});const[errors,setErrors]=useState({username:\"\",email:\"\",password:\"\"});const handleInput=(e,name)=>{const value=e.target.value;setData({...data,[name]:value});setErrors({...errors,[name]:\"\"});};const validateUsername=username=>{return username===username.toLowerCase();};const validateEmail=email=>{const regex=/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;return regex.test(email);};const validatePassword=password=>{const regex=/^(?=.*[0-9])(?=.*[A-Z]).{8,}$/;return regex.test(password);};const handleSubmit=async e=>{e.preventDefault();let valid=true;// Validate username\nif(!data.username){setErrors(prev=>({...prev,username:\"Username is required\"}));valid=false;}else if(!validateUsername(data.username)){setErrors(prev=>({...prev,username:\"Username must be in lowercase\"}));valid=false;}// Validate email\nif(!data.email){setErrors(prev=>({...prev,email:\"Email is required\"}));valid=false;}else if(!validateEmail(data.email)){setErrors(prev=>({...prev,email:\"Invalid email format\"}));valid=false;}// Validate password\nif(!data.password){setErrors(prev=>({...prev,password:\"Password is required\"}));valid=false;}else if(!validatePassword(data.password)){setErrors(prev=>({...prev,password:\"Password must be at least 8 characters long, contain at least one number and one uppercase letter\"}));valid=false;}if(valid){try{const response=await api.post(\"/users/register\",data);console.log(response.data);if(response.status===201){alert(\"User registered\");navigate(\"/login\");}}catch(error){alert(\"Error: \"+(error.response?error.response.data:error.message));}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"registerBlock\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Register User\"}),/*#__PURE__*/_jsx(\"img\",{src:\"/assets/signup.webp\",alt:\"\"}),/*#__PURE__*/_jsxs(\"div\",{className:\" text-center\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter your Name\",onChange:e=>handleInput(e,\"username\")}),errors.username&&/*#__PURE__*/_jsx(\"div\",{className:\"error mt-0 pt-0\",style:{color:\"red\",fontSize:\"12px\"},children:errors.username})]}),/*#__PURE__*/_jsxs(\"div\",{className:\" text-center\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Enter your Email\",onChange:e=>handleInput(e,\"email\")}),errors.email&&/*#__PURE__*/_jsx(\"div\",{className:\"error\",style:{color:\"red\",fontSize:\"12px\"},children:errors.email})]}),/*#__PURE__*/_jsxs(\"div\",{className:\" text-center\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Enter your password\",onChange:e=>handleInput(e,\"password\")}),errors.password&&/*#__PURE__*/_jsx(\"div\",{className:\"error\",style:{color:\"red\",fontSize:\"12px\"},children:errors.password})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmit,children:\"Register\"})]});};export default Register;","map":{"version":3,"names":["React","useState","useNavigate","api","jsx","_jsx","jsxs","_jsxs","Register","navigate","data","setData","username","email","password","errors","setErrors","handleInput","e","name","value","target","validateUsername","toLowerCase","validateEmail","regex","test","validatePassword","handleSubmit","preventDefault","valid","prev","response","post","console","log","status","alert","error","message","className","children","src","alt","type","placeholder","onChange","style","color","fontSize","onClick"],"sources":["C:/Users/AIPL/Desktop/New folder/assign/src/components/Register.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../styles/register.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport api from \"../Api\";\r\n\r\nconst Register = () => {\r\n  const navigate = useNavigate();\r\n  const [data, setData] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleInput = (e, name) => {\r\n    const value = e.target.value;\r\n    setData({ ...data, [name]: value });\r\n    setErrors({ ...errors, [name]: \"\" });\r\n  };\r\n\r\n  const validateUsername = (username) => {\r\n    return username === username.toLowerCase();\r\n  };\r\n\r\n  const validateEmail = (email) => {\r\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return regex.test(email);\r\n  };\r\n\r\n  const validatePassword = (password) => {\r\n    const regex = /^(?=.*[0-9])(?=.*[A-Z]).{8,}$/;\r\n    return regex.test(password);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let valid = true;\r\n\r\n    // Validate username\r\n    if (!data.username) {\r\n      setErrors((prev) => ({ ...prev, username: \"Username is required\" }));\r\n      valid = false;\r\n    } else if (!validateUsername(data.username)) {\r\n      setErrors((prev) => ({\r\n        ...prev,\r\n        username: \"Username must be in lowercase\",\r\n      }));\r\n      valid = false;\r\n    }\r\n\r\n    // Validate email\r\n    if (!data.email) {\r\n      setErrors((prev) => ({ ...prev, email: \"Email is required\" }));\r\n      valid = false;\r\n    } else if (!validateEmail(data.email)) {\r\n      setErrors((prev) => ({ ...prev, email: \"Invalid email format\" }));\r\n      valid = false;\r\n    }\r\n\r\n    // Validate password\r\n    if (!data.password) {\r\n      setErrors((prev) => ({ ...prev, password: \"Password is required\" }));\r\n      valid = false;\r\n    } else if (!validatePassword(data.password)) {\r\n      setErrors((prev) => ({\r\n        ...prev,\r\n        password:\r\n          \"Password must be at least 8 characters long, contain at least one number and one uppercase letter\",\r\n      }));\r\n      valid = false;\r\n    }\r\n\r\n    if (valid) {\r\n      try {\r\n        const response = await api.post(\"/users/register\", data);\r\n        console.log(response.data);\r\n        if (response.status === 201) {\r\n          alert(\"User registered\");\r\n          navigate(\"/login\");\r\n        }\r\n      } catch (error) {\r\n        alert(\r\n          \"Error: \" + (error.response ? error.response.data : error.message)\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"registerBlock\">\r\n      <h3>Register User</h3>\r\n      <img src=\"/assets/signup.webp\" alt=\"\" />\r\n      <div className=\" text-center\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter your Name\"\r\n          onChange={(e) => handleInput(e, \"username\")}\r\n        />\r\n        {errors.username && (\r\n          <div\r\n            className=\"error mt-0 pt-0\"\r\n            style={{ color: \"red\", fontSize: \"12px\" }}\r\n          >\r\n            {errors.username}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\" text-center\">\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Enter your Email\"\r\n          onChange={(e) => handleInput(e, \"email\")}\r\n        />\r\n        {errors.email && (\r\n          <div className=\"error\" style={{ color: \"red\", fontSize: \"12px\" }}>\r\n            {errors.email}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\" text-center\">\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Enter your password\"\r\n          onChange={(e) => handleInput(e, \"password\")}\r\n        />\r\n        {errors.password && (\r\n          <div className=\"error\" style={{ color: \"red\", fontSize: \"12px\" }}>\r\n            {errors.password}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <button onClick={handleSubmit}>Register</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}