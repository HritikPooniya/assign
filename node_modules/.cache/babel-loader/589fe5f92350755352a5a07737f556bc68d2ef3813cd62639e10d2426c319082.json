{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AIPL\\\\Desktop\\\\New folder\\\\assign\\\\src\\\\components\\\\logIn.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useAuth } from \"./AuthContext\";\nimport \"../styles/register.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport api from \"../Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    login\n  } = useAuth();\n  const [data, setData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [errors, setErrors] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const handleInput = (e, name) => {\n    const value = e.target.value;\n    setData({\n      ...data,\n      [name]: value\n    });\n    setErrors({\n      ...errors,\n      [name]: \"\"\n    });\n  };\n  const validateEmail = email => {\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return regex.test(email);\n  };\n  const validatePassword = password => {\n    const regex = /^(?=.*[0-9])(?=.*[A-Z]).{8,}$/;\n    return regex.test(password);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let valid = true;\n\n    // Validate email\n    if (!data.email) {\n      setErrors(prev => ({\n        ...prev,\n        email: \"Email is required\"\n      }));\n      valid = false;\n    } else if (!validateEmail(data.email)) {\n      setErrors(prev => ({\n        ...prev,\n        email: \"Invalid email format\"\n      }));\n      valid = false;\n    }\n\n    // Validate password\n    if (!data.password) {\n      setErrors(prev => ({\n        ...prev,\n        password: \"Password is required\"\n      }));\n      valid = false;\n    } else if (!validatePassword(data.password)) {\n      setErrors(prev => ({\n        ...prev,\n        password: \"Password must be at least 8 characters long, contain at least one number and one uppercase letter\"\n      }));\n      valid = false;\n    }\n    if (valid) {\n      try {\n        var _response$data;\n        const response = await api.post('/users/login', data);\n        const {\n          accessToken,\n          refreshToken\n        } = (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.data;\n        localStorage.setItem('accessToken', accessToken);\n        localStorage.setItem('refreshToken', refreshToken);\n        login();\n        navigate(\"/dashboard\");\n      } catch (error) {\n        console.error('Login failed:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registerBlock\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"LogIn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/assets/signup.webp\",\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Enter your Email\",\n      onChange: e => handleInput(e, \"email\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      style: {\n        color: 'red',\n        fontSize: '12px'\n      },\n      children: errors.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Enter your password\",\n      onChange: e => handleInput(e, \"password\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), errors.password && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error mt-0 pt-\",\n      style: {\n        color: 'red',\n        fontSize: '12px'\n      },\n      children: errors.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"LogIn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"Pql+vkZhhZAl+3zP0JqrI6iJLiE=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useAuth","useNavigate","api","jsxDEV","_jsxDEV","Login","_s","navigate","login","data","setData","email","password","errors","setErrors","handleInput","e","name","value","target","validateEmail","regex","test","validatePassword","handleSubmit","preventDefault","valid","prev","_response$data","response","post","accessToken","refreshToken","localStorage","setItem","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","placeholder","onChange","style","color","fontSize","onClick","_c","$RefreshReg$"],"sources":["C:/Users/AIPL/Desktop/New folder/assign/src/components/logIn.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useAuth } from \"./AuthContext\"; \r\nimport \"../styles/register.css\"; \r\nimport { useNavigate } from \"react-router-dom\";\r\nimport api from \"../Api\";\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const { login } = useAuth();\r\n  const [data, setData] = useState({ email: \"\", password: \"\" });\r\n  const [errors, setErrors] = useState({ email: \"\", password: \"\" });\r\n\r\n  const handleInput = (e, name) => {\r\n    const value = e.target.value;\r\n    setData({ ...data, [name]: value });\r\n    setErrors({ ...errors, [name]: \"\" }); \r\n  };\r\n\r\n  const validateEmail = (email) => {\r\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; \r\n    return regex.test(email);\r\n  };\r\n\r\n  const validatePassword = (password) => { \r\n    const regex = /^(?=.*[0-9])(?=.*[A-Z]).{8,}$/;\r\n    return regex.test(password);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();  \r\n    let valid = true;\r\n\r\n    // Validate email\r\n    if (!data.email) {\r\n      setErrors((prev) => ({ ...prev, email: \"Email is required\" }));\r\n      valid = false;\r\n    } else if (!validateEmail(data.email)) {\r\n      setErrors((prev) => ({ ...prev, email: \"Invalid email format\" }));\r\n      valid = false;\r\n    }\r\n\r\n    // Validate password\r\n    if (!data.password) {\r\n      setErrors((prev) => ({ ...prev, password: \"Password is required\" }));\r\n      valid = false;\r\n    } else if (!validatePassword(data.password)) {\r\n      setErrors((prev) => ({\r\n        ...prev,\r\n        password: \"Password must be at least 8 characters long, contain at least one number and one uppercase letter\",\r\n      }));\r\n      valid = false;\r\n    }\r\n\r\n    if (valid) {\r\n      try {\r\n        const response = await api.post('/users/login', data);\r\n        const { accessToken, refreshToken } = response.data?.data;\r\n\r\n        localStorage.setItem('accessToken', accessToken);\r\n        localStorage.setItem('refreshToken', refreshToken);\r\n        login();\r\n        navigate(\"/dashboard\");\r\n      } catch (error) {\r\n        console.error('Login failed:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"registerBlock\">\r\n      <h3>LogIn</h3>\r\n      <img src=\"/assets/signup.webp\" alt=\"\" />\r\n\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Enter your Email\"\r\n        onChange={(e) => handleInput(e, \"email\")}\r\n      />\r\n      {errors.email && <div className=\"error\" style={{color:'red',fontSize:'12px'}}>{errors.email}</div>}\r\n\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Enter your password\"\r\n        onChange={(e) => handleInput(e, \"password\")}\r\n      />\r\n      {errors.password && <div className=\"error mt-0 pt-\" style={{color:'red',fontSize:'12px'}}>{errors.password}</div>}\r\n\r\n      <button onClick={handleSubmit}>LogIn</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}