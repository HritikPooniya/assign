{"ast":null,"code":"import React,{useState}from\"react\";import{useAuth}from\"./AuthContext\";import{useDispatch}from\"react-redux\";import\"../styles/register.css\";import{useNavigate,Navigate}from\"react-router-dom\";import api from\"../Api\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Login=()=>{const navigate=useNavigate();const{login,isAuthenticated}=useAuth();const[data,setData]=useState({email:\"\",password:\"\"});const[errors,setErrors]=useState({email:\"\",password:\"\"});const dispatch=useDispatch();if(isAuthenticated){return/*#__PURE__*/_jsx(Navigate,{to:\"/dashboard\"});}const handleInput=(e,name)=>{const value=e.target.value;setData({...data,[name]:value});setErrors({...errors,[name]:\"\"});};const validateEmail=email=>{const regex=/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;return regex.test(email);};const validatePassword=password=>{const regex=/^(?=.*[0-9])(?=.*[A-Z]).{8,}$/;return regex.test(password);};const handleSubmit=async e=>{e.preventDefault();let valid=true;// Validate email\nif(!data.email){setErrors(prev=>({...prev,email:\"Email is required\"}));valid=false;}else if(!validateEmail(data.email)){setErrors(prev=>({...prev,email:\"Invalid email format\"}));valid=false;}// Validate password\nif(!data.password){setErrors(prev=>({...prev,password:\"Password is required\"}));valid=false;}else if(!validatePassword(data.password)){setErrors(prev=>({...prev,password:\"Password must be at least 8 characters long, contain at least one number and one uppercase letter\"}));valid=false;}if(valid){try{var _response$data,_response$data2,_response$data2$data,_response$data2$data$;const response=await api.post(\"/users/login\",data);const{accessToken,refreshToken}=(_response$data=response.data)===null||_response$data===void 0?void 0:_response$data.data;localStorage.setItem(\"accessToken\",accessToken);localStorage.setItem(\"refreshToken\",refreshToken);const username=response===null||response===void 0?void 0:(_response$data2=response.data)===null||_response$data2===void 0?void 0:(_response$data2$data=_response$data2.data)===null||_response$data2$data===void 0?void 0:(_response$data2$data$=_response$data2$data.user)===null||_response$data2$data$===void 0?void 0:_response$data2$data$.username;console.log({username});dispatch(login(username));login();navigate(\"/dashboard\");}catch(error){console.error(\"Login failed:\",error);}}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"registerBlock\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"LogIn\"}),/*#__PURE__*/_jsx(\"img\",{src:\"/assets/signup.webp\",alt:\"\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mx-auto\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Enter your Email\",onChange:e=>handleInput(e,\"email\")}),errors.email&&/*#__PURE__*/_jsx(\"div\",{className:\"error\",style:{color:\"red\",fontSize:\"12px\"},children:errors.email})]}),/*#__PURE__*/_jsxs(\"div\",{className:\" text-center\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Enter your password\",onChange:e=>handleInput(e,\"password\")}),errors.password&&/*#__PURE__*/_jsx(\"div\",{className:\"error mt-0 pt-\",style:{color:\"red\",fontSize:\"12px\"},children:errors.password})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmit,children:\"LogIn\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"singUpbtn mt-2\",onClick:()=>navigate(\"/register\"),children:\"Register ?\"})]});};export default Login;","map":{"version":3,"names":["React","useState","useAuth","useDispatch","useNavigate","Navigate","api","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Login","navigate","login","isAuthenticated","data","setData","email","password","errors","setErrors","dispatch","to","handleInput","e","name","value","target","validateEmail","regex","test","validatePassword","handleSubmit","preventDefault","valid","prev","_response$data","_response$data2","_response$data2$data","_response$data2$data$","response","post","accessToken","refreshToken","localStorage","setItem","username","user","console","log","error","children","className","src","alt","type","placeholder","onChange","style","color","fontSize","onClick"],"sources":["C:/Users/AIPL/Desktop/New folder/assign/src/components/logIn.tsx"],"sourcesContent":["import React, { useState } from \"react\"; \r\nimport { useAuth } from \"./AuthContext\";\r\nimport { useDispatch,  } from \"react-redux\";\r\nimport \"../styles/register.css\";\r\nimport { useNavigate,Navigate } from \"react-router-dom\";\r\nimport api from \"../Api\";\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const { login, isAuthenticated } = useAuth();\r\n  const [data, setData] = useState({ email: \"\", password: \"\" });\r\n  const [errors, setErrors] = useState({ email: \"\", password: \"\" });\r\n  const dispatch = useDispatch();\r\n\r\n  if (isAuthenticated) {\r\n    return <Navigate to=\"/dashboard\" />;\r\n  }\r\n\r\n  const handleInput = (e, name) => {\r\n\r\n \r\n    \r\n    const value = e.target.value;\r\n    setData({ ...data, [name]: value });\r\n    setErrors({ ...errors, [name]: \"\" });\r\n  };\r\n\r\n  const validateEmail = (email) => {\r\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return regex.test(email);\r\n  };\r\n\r\n  const validatePassword = (password) => {\r\n    const regex = /^(?=.*[0-9])(?=.*[A-Z]).{8,}$/;\r\n    return regex.test(password);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let valid = true;\r\n\r\n    // Validate email\r\n    if (!data.email) {\r\n      setErrors((prev) => ({ ...prev, email: \"Email is required\" }));\r\n      valid = false;\r\n    } else if (!validateEmail(data.email)) {\r\n      setErrors((prev) => ({ ...prev, email: \"Invalid email format\" }));\r\n      valid = false;\r\n    }\r\n\r\n    // Validate password\r\n    if (!data.password) {\r\n      setErrors((prev) => ({ ...prev, password: \"Password is required\" }));\r\n      valid = false;\r\n    } else if (!validatePassword(data.password)) {\r\n      setErrors((prev) => ({\r\n        ...prev,\r\n        password:\r\n          \"Password must be at least 8 characters long, contain at least one number and one uppercase letter\",\r\n      }));\r\n      valid = false;\r\n    }\r\n\r\n    if (valid) {\r\n      try {\r\n        const response = await api.post(\"/users/login\", data);\r\n        const { accessToken, refreshToken } = response.data?.data; \r\n\r\n        localStorage.setItem(\"accessToken\", accessToken);\r\n        localStorage.setItem(\"refreshToken\", refreshToken);\r\n        const username = response?.data?.data?.user?.username;\r\n        console.log({username})\r\n\r\n        dispatch(login(username));\r\n        login();\r\n        navigate(\"/dashboard\");\r\n      } catch (error) {\r\n        console.error(\"Login failed:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"registerBlock\">\r\n        <h3>LogIn</h3>\r\n        <img src=\"/assets/signup.webp\" alt=\"\" />\r\n\r\n        <div className=\"mx-auto\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Enter your Email\"\r\n            onChange={(e) => handleInput(e, \"email\")}\r\n          />\r\n          {errors.email && (\r\n            <div className=\"error\" style={{ color: \"red\", fontSize: \"12px\" }}>\r\n              {errors.email}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\" text-center\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            onChange={(e) => handleInput(e, \"password\")}\r\n          />\r\n          {errors.password && (\r\n            <div\r\n              className=\"error mt-0 pt-\"\r\n              style={{ color: \"red\", fontSize: \"12px\" }}\r\n            >\r\n              {errors.password}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <button onClick={handleSubmit}>LogIn</button>\r\n      </div>\r\n      <button className=\"singUpbtn mt-2\" onClick={() => navigate(\"/register\")}>\r\n        Register ?\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}